{
    "ProgramSyntax": {
        "Statements": [{
                "ImportSyntax": {
                    "Package": {
                        "PackageSyntax": {
                            "Hierarchy": [
                                "io"
                            ]
                        }
                    }
                }
            },
            {
                "TypeDefinitionSyntax": {
                    "Name": "<Word: 'complex'>",
                    "Statements": [{
                            "DeclarationSyntax": {
                                "Variable Type": {
                                    "TypeSyntax": {
                                        "Token": "<DoubleType: 'double'>"
                                    }
                                },
                                "Name": "real"
                            }
                        },
                        {
                            "DeclarationSyntax": {
                                "Variable Type": {
                                    "TypeSyntax": {
                                        "Token": "<DoubleType: 'double'>"
                                    }
                                },
                                "Name": "imaginary"
                            }
                        },
                        {
                            "FunctionSyntax": {
                                "Name": "<Word: 'construct'>",
                                "Arguments": [{
                                        "DeclarationSyntax": {
                                            "Variable Type": {
                                                "TypeSyntax": {
                                                    "Token": "<DoubleType: 'double'>"
                                                }
                                            },
                                            "Name": "r"
                                        }
                                    },
                                    {
                                        "DeclarationSyntax": {
                                            "Variable Type": {
                                                "TypeSyntax": {
                                                    "Token": "<DoubleType: 'double'>"
                                                }
                                            },
                                            "Name": "i"
                                        }
                                    }
                                ],
                                "Statements": [{
                                        "AssignmentSyntax": {
                                            "Boink.AST.Nodes.VariableSyntax": {
                                                "VariableSyntax": {
                                                    "Name": "r"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "AssignmentSyntax": {
                                            "Boink.AST.Nodes.VariableSyntax": {
                                                "VariableSyntax": {
                                                    "Name": "i"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "FunctionSyntax": {
                                "Name": "<Word: 'getRealPart'>",
                                "Arguments": [],
                                "Statements": [{
                                    "GiveSyntax": {
                                        "Expression": {
                                            "VariableSyntax": {
                                                "Name": "real"
                                            }
                                        }
                                    }
                                }]
                            }
                        },
                        {
                            "FunctionSyntax": {
                                "Name": "<Word: 'getImaginaryPart'>",
                                "Arguments": [],
                                "Statements": [{
                                    "GiveSyntax": {
                                        "Expression": {
                                            "VariableSyntax": {
                                                "Name": "imaginary"
                                            }
                                        }
                                    }
                                }]
                            }
                        }
                    ]
                }
            },
            {
                "DeclarationSyntax": {
                    "Variable Type": {
                        "TypeSyntax": {
                            "Token": "<Word: 'complex'>"
                        }
                    },
                    "Name": "i",
                    "Expression": {
                        "VariableSyntax": {
                            "Name": "complex",
                            "Child Reference": {
                                "FunctionCallSyntax": {
                                    "Name": "construct",
                                    "Arguments": [{
                                            "DoubleLiteralSyntax": "0"
                                        },
                                        {
                                            "DoubleLiteralSyntax": "1"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            {
                "DeclarationSyntax": {
                    "Variable Type": {
                        "TypeSyntax": {
                            "Token": "<IntType: 'int'>"
                        }
                    },
                    "Name": "imaginary",
                    "Expression": {
                        "VariableSyntax": {
                            "Name": "i",
                            "Child Reference": {
                                "FunctionCallSyntax": {
                                    "Name": "getImaginaryPart",
                                    "Arguments": []
                                }
                            }
                        }
                    }
                }
            },
            {
                "VariableSyntax": {
                    "Name": "io",
                    "Child Reference": {
                        "FunctionCallSyntax": {
                            "Name": "writeLine",
                            "Arguments": [{
                                "VariableSyntax": {
                                    "Name": "imaginary"
                                }
                            }]
                        }
                    }
                }
            }
        ]
    }
}